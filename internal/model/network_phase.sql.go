// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: network_phase.sql

package model

import (
	"context"
)

const DeleteConnectionsNotInTmp = `-- name: DeleteConnectionsNotInTmp :exec
DELETE FROM connections
WHERE network_id = ?
AND NOT EXISTS (
  SELECT 1 
  FROM tmp_connections t 
  WHERE t.person_id = connections.person_id
)
`

func (q *Queries) DeleteConnectionsNotInTmp(ctx context.Context, networkID int64) error {
	_, err := q.db.ExecContext(ctx, DeleteConnectionsNotInTmp, networkID)
	return err
}

const InsertNewConnectionsFromTmp = `-- name: InsertNewConnectionsFromTmp :exec
INSERT INTO connections
(network_id, person_id)
SELECT
  t.network_id,
  t.person_id
FROM tmp_connections t
LEFT JOIN connections c ON c.person_id = t.person_id
WHERE t.person_id IS NOT NULL
  AND c.id IS NULL
`

func (q *Queries) InsertNewConnectionsFromTmp(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, InsertNewConnectionsFromTmp)
	return err
}
