// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: csv_phase.sql

package model

import (
	"context"
)

const CreateTmpConnectionsTable = `-- name: CreateTmpConnectionsTable :exec
CREATE TEMPORARY TABLE IF NOT EXISTS tmp_connections (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  network_id INTEGER NOT NULL,
  profile_url TEXT NOT NULL,
  person_id INTEGER
)
`

func (q *Queries) CreateTmpConnectionsTable(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, CreateTmpConnectionsTable)
	return err
}

const InsertTmpConnection = `-- name: InsertTmpConnection :exec
INSERT INTO tmp_connections (network_id, profile_url) VALUES (?, ?)
`

type InsertTmpConnectionParams struct {
	NetworkID  int64  `db:"network_id"`
	ProfileUrl string `db:"profile_url"`
}

func (q *Queries) InsertTmpConnection(ctx context.Context, arg InsertTmpConnectionParams) error {
	_, err := q.db.ExecContext(ctx, InsertTmpConnection, arg.NetworkID, arg.ProfileUrl)
	return err
}
