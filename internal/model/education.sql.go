// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: education.sql

package model

import (
	"context"
)

const CountEducations = `-- name: CountEducations :one
SELECT COUNT(*) FROM educations
`

func (q *Queries) CountEducations(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, CountEducations)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const InsertEducation = `-- name: InsertEducation :exec
INSERT INTO educations
(person_id, organization_id, degree_id, study_field_id, start_year, start_month, end_year, end_month)
VALUES
(?, ?, ?, ?, ?, ?, ?, ?)
`

type InsertEducationParams struct {
	PersonID       int64  `db:"person_id"`
	OrganizationID int64  `db:"organization_id"`
	DegreeID       *int64 `db:"degree_id"`
	StudyFieldID   *int64 `db:"study_field_id"`
	StartYear      *int64 `db:"start_year"`
	StartMonth     *int64 `db:"start_month"`
	EndYear        *int64 `db:"end_year"`
	EndMonth       *int64 `db:"end_month"`
}

func (q *Queries) InsertEducation(ctx context.Context, arg InsertEducationParams) error {
	_, err := q.db.ExecContext(ctx, InsertEducation,
		arg.PersonID,
		arg.OrganizationID,
		arg.DegreeID,
		arg.StudyFieldID,
		arg.StartYear,
		arg.StartMonth,
		arg.EndYear,
		arg.EndMonth,
	)
	return err
}
