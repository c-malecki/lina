// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: organization.sql

package model

import (
	"context"
)

const insertOrganization = `-- name: InsertOrganization :exec
INSERT INTO organizations
(id, "name", universal_name, website, linkedin_url, logo_url, founded_year, founded_month, organization_type, employee_count, student_count, urn, created_at)
VALUES
(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`

type InsertOrganizationParams struct {
	ID               int64   `db:"id"`
	Name             string  `db:"name"`
	UniversalName    string  `db:"universal_name"`
	Website          *string `db:"website"`
	LinkedinUrl      string  `db:"linkedin_url"`
	LogoUrl          *string `db:"logo_url"`
	FoundedYear      *int64  `db:"founded_year"`
	FoundedMonth     *string `db:"founded_month"`
	OrganizationType int64   `db:"organization_type"`
	EmployeeCount    *int64  `db:"employee_count"`
	StudentCount     *int64  `db:"student_count"`
	Urn              string  `db:"urn"`
	CreatedAt        int64   `db:"created_at"`
}

func (q *Queries) InsertOrganization(ctx context.Context, arg InsertOrganizationParams) error {
	_, err := q.db.ExecContext(ctx, insertOrganization,
		arg.ID,
		arg.Name,
		arg.UniversalName,
		arg.Website,
		arg.LinkedinUrl,
		arg.LogoUrl,
		arg.FoundedYear,
		arg.FoundedMonth,
		arg.OrganizationType,
		arg.EmployeeCount,
		arg.StudentCount,
		arg.Urn,
		arg.CreatedAt,
	)
	return err
}

const insertOrganizationIndustry = `-- name: InsertOrganizationIndustry :exec
INSERT INTO organization_industries
(organization_id, industry_id)
VALUES
(?, ?)
`

type InsertOrganizationIndustryParams struct {
	OrganizationID int64 `db:"organization_id"`
	IndustryID     int64 `db:"industry_id"`
}

func (q *Queries) InsertOrganizationIndustry(ctx context.Context, arg InsertOrganizationIndustryParams) error {
	_, err := q.db.ExecContext(ctx, insertOrganizationIndustry, arg.OrganizationID, arg.IndustryID)
	return err
}

const insertOrganizationLocation = `-- name: InsertOrganizationLocation :exec
INSERT INTO organization_locations
(organization_id, location_id, is_headquarters)
VALUES
(?, ?, ?)
`

type InsertOrganizationLocationParams struct {
	OrganizationID int64 `db:"organization_id"`
	LocationID     int64 `db:"location_id"`
	IsHeadquarters int64 `db:"is_headquarters"`
}

func (q *Queries) InsertOrganizationLocation(ctx context.Context, arg InsertOrganizationLocationParams) error {
	_, err := q.db.ExecContext(ctx, insertOrganizationLocation, arg.OrganizationID, arg.LocationID, arg.IsHeadquarters)
	return err
}

const insertOrganizationSpecialty = `-- name: InsertOrganizationSpecialty :exec
INSERT INTO organization_specialties
(organization_id, specialty_id)
VALUES
(?, ?)
`

type InsertOrganizationSpecialtyParams struct {
	OrganizationID int64 `db:"organization_id"`
	SpecialtyID    int64 `db:"specialty_id"`
}

func (q *Queries) InsertOrganizationSpecialty(ctx context.Context, arg InsertOrganizationSpecialtyParams) error {
	_, err := q.db.ExecContext(ctx, insertOrganizationSpecialty, arg.OrganizationID, arg.SpecialtyID)
	return err
}
