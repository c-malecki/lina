// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: config.sql

package model

import (
	"context"
)

const selectConfig = `-- name: SelectConfig :many
SELECT id, secret FROM config LIMIT 1
`

func (q *Queries) SelectConfig(ctx context.Context) ([]Config, error) {
	rows, err := q.db.QueryContext(ctx, selectConfig)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Config{}
	for rows.Next() {
		var i Config
		if err := rows.Scan(&i.ID, &i.Secret); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateConfigSecret = `-- name: UpdateConfigSecret :exec
UPDATE config SET "secret" = ? WHERE id = ?
`

type UpdateConfigSecretParams struct {
	Secret *string `db:"secret"`
	ID     int64   `db:"id"`
}

func (q *Queries) UpdateConfigSecret(ctx context.Context, arg UpdateConfigSecretParams) error {
	_, err := q.db.ExecContext(ctx, updateConfigSecret, arg.Secret, arg.ID)
	return err
}
